{# vim: filetype=dosini.jinja2 #}
{{ ansible_managed | ansible.builtin.comment }}
{% if ansible_facts['service_mgr'] != 'systemd' %}
{# With systemd, the unit handles switching the user #}
setuid = {{ ldap_client_stunnel_user }}
setgid = {{ ldap_client_stunnel_user }}
{% endif %}
pid = /run/{{ ldap_client_stunnel_service_name }}/stunnel.pid
# reduce logging verbosity
debug = warning
# performance tuning
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1

[ldap]
client = yes
accept = 127.0.0.1:389
connect = {{ ldap_client_server }}:636
{% if ldap_client_trusted_ca is defined %}
CAfile = {{ ldap_client_trusted_ca }}
{% else %}
CApath = {{ ldap_client_ca_path }}
{% endif %}
# enable certificate validation
verifyChain = yes
{% if ldap_client_server | ansible.utils.ipaddr %}
# check that the server's certificate matches the IP
checkIP = {{ ldap_client_server }}
{% else %}
# check that the server's certificate matches the hostname
checkHost = {{ ldap_client_server }}
{% endif %}
cert = {{ ldap_client_tls_cert }}
key = {{ ldap_client_tls_cert_key }}
# enforce TLSv{{ ldap_client_tls13_only | bool | ansible.builtin.ternary('1.3', '1.2') }} or newer
sslVersionMin = TLSv{{ ldap_client_tls13_only | bool | ansible.builtin.ternary('1.3', '1.2') }}
# TLSv1.2 ciphers
ciphers = AESGCM:CHACHA20:!aNULL:!RSA:!PSK
